@using Microsoft.AspNet.Identity;
@model PuntoDeVenta.Models.CuentasTelepeaje

@{
    ViewBag.Title = "Clientes";

    var modelCuenta = (PuntoDeVenta.Models.CuentasTelepeaje)ViewBag.ModelCuenta;
    var modelTag = (PuntoDeVenta.Models.Tags)ViewBag.ModelTag;
}

<div class="col-md-12 text-align-center">
    <h4 class="titulo1">Busqueda de Clientes con sus Cuentas y Tags</h4>
    <p class="lead">
        Realice una busqueda por un cliente específico, además de sus cuentas y tags del mismo.
    </p>
</div>

<p>
    @Html.ActionLink("Crear nuevo cliente", "Create", routeValues: null, htmlAttributes: new { @class = "btn botonstyle2" })
</p>

<hr />


@if (ViewData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewData["Success"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (ViewData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewData["Error"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<!-- Tabla de clientes -->
<div class="table-responsive">
    <table id="example" class="table table-bordered table-hover" style="width:100%">
        <thead>
            <tr>
                <th scope="col">Más info.</th>
                <th scope="col">Número de cliente</th>
                <th scope="col">Nombre de completo</th>
                <th scope="col">Empresa</th>
                <th scope="col">Email de cliente</th>
                <th scope="col">Teléfono de cliente</th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col"></th>
            </tr>
        </thead>
    </table>
</div>

<!-- Modal Lista De Cuentas -->
<div class="modal fade bd-example-modal-xl" id="modalcuentastags" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content"  style="height:580px !important;">
            <div class="modal-header">
                <h5 class="modal-title">Cuentas de: <label id="clientename"></label></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y:scroll !important; height: 600px !important;">
                @Html.Partial("_CuentasTags")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Atrás</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Lista de Tags -->
<div class="modal fade bd-example-modal-xl" id="modallisttags" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="height:580px !important;">
            <div class="modal-header">
                <h5 class="modal-title">Tags de la cuenta: <label id="cuentanum"></label></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y:scroll !important; height: 600px !important;">
                <div class="table-responsive">
                    <table id="table_tags" class="table table-bordered table-hover" style="width:100%;">
                        <thead>
                            <tr>
                                <th scope="col">Número de tag</th>
                                <th scope="col">Saldo de tag</th>
                                <th scope="col">Estatus de tag</th>
                                <th scope="col">Fecha registro tag</th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="atrasmodaltag">Atrás</button>
            </div>
        </div>
    </div>
</div>
<!-- FIN Modal Lista de Tags -->

@Html.Partial("_AddTags")

@Html.Partial("_AddTagsColectivos")

<!-- Modal Create Cuenta -->
<div class="modal fade" id="ModalNuevaCuenta" tabindex="-1" role="dialog" aria-labelledby="ModalNuevaCuentaTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalNuevaCuentaTitle">Crear cuenta</h5>
                <button type="button" class="close" aria-label="Close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("Create", "CuentasTelepeajes", FormMethod.Post, htmlAttributes: new { @id = "FormCreateCuenta" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label for="numcliente">
                            <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> Número de cliente
                        </label>
                        <input id="numcliente" class="form-control formulario1" type="text" placeholder="Readonly input here…" readonly>
                    </div>
                    <div class="form-group">
                        <label for="nomcliente"><img class="img-modal" src="~/Content/css-yisus/img/user-circle-solid.svg" /> Nombre</label>
                        <input id="nomcliente" class="form-control formulario1" type="text" placeholder="Readonly input here…" readonly>
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/columns-solid.svg" /> @Html.LabelFor(model => model.TypeCuenta, htmlAttributes: new { @for = "TypeCuenta" })
                        @Html.DropDownListFor(model => model.TypeCuenta, (SelectList)ViewBag.TipoCuentas, htmlAttributes: new { @class = "form-control formulario2" })
                        @Html.ValidationMessageFor(model => model.TypeCuenta, "", new { @class = "text-danger" })
                    </div>

                    <div id="fromTocreate">
                        <div class="form-group">
                            <img class="img-modal2" src="~/Content/css-yisus/img/file-invoice-dollar-solid.svg" /> @Html.LabelFor(model => model.SaldoCuenta, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SaldoCuenta, new { htmlAttributes = new { @class = "form-control formulario1" } })
                            @Html.ValidationMessageFor(model => model.SaldoCuenta, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    @Html.Hidden("ClienteId")
                </div>
                <div class="modal-footer">

                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-success botonaceptar" id="CreateCuenta">Crear</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Confirmar Cuenta exampleModalCenter1 -->
<div class="modal fade" id="exampleModalCenter1" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle1">¡Advertencia!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> Número de cliente: <label id="numclienteVal"></label>
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/user-circle-solid.svg" /> Nombre: <label id="nomclienteVal"></label>
                    </div>
                    <div id="saldovalID">
                        <div class="form-group">
                            <img class="img-modal2" src="~/Content/css-yisus/img/file-invoice-dollar-solid.svg" /> Saldo inicial: <label id="saldoVal"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        ¿Seguro de crear la cuenta?
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success botonaceptar" id="submitCreateCuenta">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Habilitar ModalHabilitar Cliente -->
<div class="modal fade" id="ModalHabilitar" tabindex="-1" role="dialog" aria-labelledby="ModalHabilitarLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalHabilitarLabel">Habilitar cliente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="idclientehab" name="IdCliente" type="hidden">
                ¿Seguro de habilitar al cliente <label id="nomclienthab"></label>?
                <small class="form-text text-muted">Cuando habilite al cliente, sus cuentas y tags (con saldo hábil) se activarán automaticamente.</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="submitClienteHabil">Habilitar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Habilitar ModalHabilitar Cuenta -->
<div class="modal fade" id="ModalHabilitarCuenta" tabindex="-1" role="dialog" aria-labelledby="ModalHabilitarCuentaLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalHabilitarCuentaLabel">Habilitar cuenta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="idcuentahab" name="IdCuenta" type="hidden">
                ¿Seguro de habilitar la cuenta <label id="numcuentahab"></label>?
                <small class="form-text text-muted">Cuando habilite la cuenta, sus tags (con saldo hábil) se activarán automaticamente.</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="submitHabilCuenta">Habilitar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Habilitar ModalHabilitar Tag -->
<div class="modal fade" id="ModalHabilitarTag" tabindex="-1" role="dialog" aria-labelledby="ModalHabilitarTagLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalHabilitarTagLabel">Habilitar tag</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input id="idtaghab" name="IdTag" type="hidden">
                ¿Seguro de habilitar el tag <label id="numtaghab"></label>?
                <small class="form-text text-muted">El tag se habilitará si el saldo es válido el saldo.</small>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="submitHabilTag">Habilitar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Recargar Cuenta -->
<div class="modal fade" id="ModalCuentaReca" tabindex="-1" role="dialog" aria-labelledby="ModalCuentaRecaTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalCuentaRecaTitle">Recargar cuenta</h5>
                <button type="button" class="close" id="closemodalcuenta" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("RecargarSaldo", "CuentasTelepeajes", routeValues: new { ReturnController = "Clientes" }, method: FormMethod.Post, htmlAttributes: new { @id = "FormRecargarCuenta" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> @Html.LabelFor(model => modelCuenta.NumCuenta, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => modelCuenta.NumCuenta, new { htmlAttributes = new { @class = "form-control formulario1" } })
                        @Html.ValidationMessageFor(model => modelCuenta.NumCuenta, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" /> @Html.LabelFor(model => modelCuenta.SaldoARecargar, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => modelCuenta.SaldoARecargar, new { @class = "form-control formulario1" })
                        @Html.ValidationMessageFor(model => modelCuenta.SaldoARecargar, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" /> @Html.LabelFor(model => modelCuenta.ConfSaldoARecargar, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => modelCuenta.ConfSaldoARecargar, new { @class = "form-control formulario1" })
                        @Html.ValidationMessageFor(model => modelCuenta.ConfSaldoARecargar, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success botonaceptar" id="RecargarCuenta">Recargar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Recargar Cuenta Confirmar -->
<div class="modal fade" id="ModalCuentaConf" tabindex="-1" role="dialog" aria-labelledby="ModalCuentaConfTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalCuentaConfTitle">¡Advertencia!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> Número de cuenta: <label id="numcuentaVal"></label>
                </div>
                <div class="form-group">
                    <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" /> Saldo a recargar: <label id="saldoarecargarCuentaVal"></label>
                </div>
                <div class="form-group">
                    ¿Seguro de recargar?
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success botonaceptar" id="submitFormCuentaReca">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Recargar Tag -->
<div class="modal fade" id="ModalTagReca" tabindex="-1" role="dialog" aria-labelledby="ModalTagRecaTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalTagRecaTitle">Recargar tag</h5>
                <button type="button" class="close" id="closemodaltag" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("RecargarSaldo", "Tags", routeValues: new { ReturnController = "Clientes" }, method: FormMethod.Post, htmlAttributes: new { @id = "FormRecargarTag", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> @Html.LabelFor(m => modelTag.NumTag, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => modelTag.NumTag, new { htmlAttributes = new { @class = "form-control formulario1" } })
                        @Html.ValidationMessageFor(m => modelTag.NumTag, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" />@Html.LabelFor(m => modelTag.SaldoARecargar, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => modelTag.SaldoARecargar, new { htmlAttributes = new { @class = "form-control formulario1" } })
                        @Html.ValidationMessageFor(m => modelTag.SaldoARecargar, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" />@Html.LabelFor(m => modelTag.ConfSaldoARecargar, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => modelTag.ConfSaldoARecargar, new { htmlAttributes = new { @class = "form-control formulario1" } })
                        @Html.ValidationMessageFor(m => modelTag.ConfSaldoARecargar, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-success botonaceptar" id="RecargarTag">Recargar</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal Recargar Tag Confirmar -->
<div class="modal fade" id="ModalTagConf" tabindex="-1" role="dialog" aria-labelledby="ModalTagConfTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalTagConfTitle">¡Advertencia!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <img class="img-modal" src="~/Content/css-yisus/img/slack-hash-brands.svg" /> Número de tag: <label id="numtagVal"></label>
                </div>
                <div class="form-group">
                    <img class="img-modal" src="~/Content/css-yisus/img/money-bill-solid.svg" /> Saldo a recargar: <label id="saldoarecargarTagVal"></label>
                </div>
                <div class="form-group">
                    ¿Seguro de recargar?
                </div>
            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-success botonaceptar" id="submitFormTagReca">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Styles
{
    <link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

    <style>
        td.details-control {
            background: url('https://cdn.rawgit.com/DataTables/DataTables/6c7ada53ebc228ea9bc28b1b216e793b1825d188/examples/resources/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('https://cdn.rawgit.com/DataTables/DataTables/6c7ada53ebc228ea9bc28b1b216e793b1825d188/examples/resources/details_close.png') no-repeat center center;
        }
    </style>
}


@section Scripts
{
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/date.format.js"></script>


    <script>

        $(document).ready(function () {

            /***************************** CLIENTES *****************************/

            /* Formatting function for row details - modify as you need */
            function format(d) {

                var status = (d.StatusCliente) ? "Válido" : "Inválido";

                var date = d.DateTCliente;
                var nowDate = new Date(parseInt(date.substr(6)));

                // `d` is the original data object for the row
                return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
                    '<tr>' +
                    '<td>Dirección de cliente:</td>' +
                    '<td>' + d.AddressCliente + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>CP:</td>' +
                    '<td>' + d.CP + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Ciudad:</td>' +
                    '<td>' + d.City + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>País:</td>' +
                    '<td>' + d.Pais + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Departamento:</td>' +
                    '<td>' + d.Departamento + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>NIT:</td>' +
                    '<td>' + d.NIT + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Teléfono oficina:</td>' +
                    '<td>' + d.PhoneOffice + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Fecha de registro cliente:</td>' +
                    '<td>' + nowDate.format("dd/mm/yyyy HH:MM:ss") + '</td>' +
                    '</tr>' +
                    '<tr>' +
                    '<td>Estatus de cliente:</td>' +
                    '<td>' + status + '</td>' +
                    '</tr>' +
                    '</table>';
            }

            var table = $('#example').DataTable({
                language: {
                    "lengthMenu": "Desplegar _MENU_ por página",
                    "zeroRecords": "Sin resultados - disculpe",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sin registros disponibles",
                    "infoFiltered": "(registros filtrados _MAX_ )",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                },
                ajax: {
                    url: "/Clientes/GetDataClientes",
                    type: "GET",
                    datatype: "json",
                },
                columns: [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                    { "data": "NumCliente" },
                    { "data": "NombreCompleto" },
                    { "data": "Empresa" },
                    { "data": "EmailCliente" },
                    { "data": "PhoneCliente" },
                    {
                        "className": "ncuentaclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-light">Nueva cuenta</button>'
                    },
                    {
                        "className": "editarclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-dark">Editar cliente</button>'
                    },
                    {
                        "className": "nhabilitarclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-success">Habilitar cliente</button>'
                    },
                    {
                        "className": "ndeshabilitarclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-warning">Deshabilitar cliente</button>'
                    },
                    {
                        "className": "neliminarclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-danger">Eliminar cliente</button>'
                    },
                    {
                        "className": "vcuentasmodalclie",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-tabla">Ver cuentas y tags</button>'
                    }
                ],
                order: [[1, 'desc']]
            });

            // Add event listener for opening and closing details
            $('#example tbody').on('click', 'td.details-control', function (e) {
                e.preventDefault();

                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });

            $('#example tbody').on('click', 'td.ncuentaclie', function (e) {
                e.preventDefault();
                var data = table.row($(this).parents('tr')).data();

                $("#numcliente").val("");
                $("#nomcliente").val("");
                $("#ClienteId").val("");
                $("#SaldoCuenta").val("");

                $('#ModalNuevaCuenta').modal('show');

                $("#numcliente").val(data.NumCliente);
                $("#nomcliente").val(data.NombreCompleto);
                $("#ClienteId").val(data.Id);

            });

            $('#example tbody').on('click', 'td.ndeshabilitarclie', function (e) {
                e.preventDefault();
                var data = table.row($(this).parents('tr')).data();

                var url = '@Url.Action("Deshabilitar", "Clientes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $('#example tbody').on('click', 'td.neliminarclie', function (e) {
                e.preventDefault();
                var data = table.row($(this).parents('tr')).data();

                var url = '@Url.Action("Delete", "Clientes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $('#example tbody').on('click', 'td.editarclie', function (e) {
                e.preventDefault();
                var data = table.row($(this).parents('tr')).data();

                var url = '@Url.Action("Edit", "Clientes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $('#example tbody').on('click', 'td.nhabilitarclie', function (e) {
                e.preventDefault();
                var data = table.row($(this).parents('tr')).data();

                $("#idclientehab").val(data.Id);
                $("#nomclienthab").text(data.NombreCompleto);

                $('#ModalHabilitar').modal('show');
            });

            $("#example tbody").on('click', 'td.vcuentasmodalclie', function (e) {

                e.preventDefault();

                var datos = table.row($(this).parents('tr')).data();

                  $.ajax({
                    type: "POST",
                    url: "/Clientes/CuentasTags",
                    data: { IdCliente: datos.Id },
                }).done(function (result) {
                    //console.log(result);
                    example_table.clear().draw();
                    example_table.rows.add(result).draw();
                    $("#clientename").text(datos.NombreCompleto);
                    $("#modalcuentastags").modal('show');
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    // needs to implement if it fails
                    alert(jqXHR.responseText)
                });

            });

            $("#submitClienteHabil").on('click', function (e) {
                e.preventDefault();
                var url = '@Url.Action("Habilitar", "Clientes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', $("#idclientehab").val());
            });

            $('#TypeCuenta').change(function (e) {

                e.preventDefault();
                var ddlValue = $(this).val();

                if (ddlValue == "Colectiva") {
                    $('#fromTocreate').show();
                }
                else if (ddlValue == "Individual") {
                    // show fromTo div, hide time div
                    $('#fromTocreate').hide();
                }
            });

            $('#CreateCuenta').on('click', function (e) {

                e.preventDefault();
                var form = $("#FormCreateCuenta").validate();

                if (form.valid()) {
                    $('#ModalNuevaCuenta').modal('hide');

                    var val = $("#TypeCuenta option:selected").val();

                    if (val == "Individual") {
                        $("#saldovalID").hide();
                    } else if (val == "Colectiva") {
                        $("#saldoVal").text($("#SaldoCuenta").val());
                        $("#saldovalID").show();
                    }

                    $("#numclienteVal").text($("#numcliente").val());
                    $("#nomclienteVal").text($("#nomcliente").val());


                    $('#exampleModalCenter1').modal('show');
                }
            });

            $('#submitCreateCuenta').on('click', function (e) {
                e.preventDefault();
                $("#FormCreateCuenta").submit();
            });

            $(function () {
                $('#SaldoCuenta').mask("#,##0.00", { reverse: true });
            });

            /******************* CUENTAS ******************************/

            var example_table = $('#example_table').DataTable({
                language: {
                    "lengthMenu": "Desplegar _MENU_ por página",
                    "zeroRecords": "Sin resultados - disculpe",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sin registros disponibles",
                    "infoFiltered": "(registros filtrados _MAX_ )",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                },
                data: [],
                columns: [
                    { "data": "NumCuenta" },
                    { "data": "TypeCuenta" },
                    {
                        "data": "SaldoCuenta",
                        render: function (data, type, row) {
                            var saldocuenta = $.number((parseFloat(data) / 100), 2, '.', ',');
                            return saldocuenta;
                        },
                    },
                    {
                        "data": "StatusCuenta",
                        render: function (data, type, row) {
                            var status = (data) ? "Válido" : "Inválido";
                            return status;
                        },
                    },
                    {
                        "data": "DateTCuenta",
                        render: function (data, type, row) {
                            var nowDateCuenta = new Date(parseInt(data.substr(6)));
                            return nowDateCuenta.format("dd/mm/yyyy HH:MM:ss");
                        },
                    },
                    {
                        "className": "recargacue",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-info">Recargar saldo</button>'
                    },
                    {
                        "className": "ntagcue",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-light">Agregar Tag</button>'
                    },
                    {
                        "className": "nhabilitarcue",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-success">Habilitar cuenta</button>'
                    },
                    {
                        "className": "ndeshabilitarcue",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-warning">Deshabilitar cuenta</button>'
                    },
                    {
                        "className": "viewtagscue",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-tabla">Ver tags</button>'
                    }
                ],
                order: [[1, 'desc']]
            });

            $("#example_table tbody").on('click', 'td.viewtagscue', function (e) {
                e.preventDefault();

                var datos = example_table.row($(this).parents('tr')).data();

                console.log(datos);

                $.ajax({
                    type: "POST",
                    url: "/Clientes/Tags",
                    data: { IdCuenta: datos.Id },
                }).done(function (result) {
                    //console.log(result);
                    table_tags.clear().draw();
                    table_tags.rows.add(result).draw();
                    $("#cuentanum").text(datos.NumCuenta);
                    $("#modallisttags").modal('show');
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    // needs to implement if it fails
                    alert(jqXHR.responseText)
                });

                $("#modalcuentastags").modal('hide');

            });

            $("#example_table tbody").on('click', 'td.ntagcue', function (e) {

                e.preventDefault();

                var data = example_table.row($(this).parents('tr')).data();

                //console.log(data);

                $("#numcuenta").val("");
                $("#CuentaId").val("");
                $("#CobroTag").val("");
                $("#tipocuenta").val("");
                $("#SaldoTag").val("");
                $("#NumTag").val("");

                $("#numcuenta").val(data.NumCuenta);
                $("#CuentaId").val(data.Id);
                $("#CobroTag").val("77.00");
                $("#tipocuenta").val(data.TypeCuenta);

                /**/

                $("#modelTags_numcuenta").val("");
                $("#modelTags_CuentaId").val("");
                $("#modelTags_CobroTag").val("");
                $("#modelTags_tipocuenta").val("");
                $("#modelTags_SaldoTag").val("");
                $("#modelTags_NumTag").val("");

                $("#modelTags_numcuenta").val(data.NumCuenta);
                $("#modelTags_CuentaId").val(data.Id);
                $("#modelTags_CobroTag").val("77.00");
                $("#modelTags_tipocuenta").val(data.TypeCuenta);



                if (data.TypeCuenta == "Colectiva") {
                    $("#fromTo").hide();
                    $("#fromTo1").hide();
                    $("#fromTo2").hide();
                    $("#fromTo12").hide();
                    $('#AddTags2').modal('show');
                } else if (data.TypeCuenta == "Individual") {
                    $("#fromTo").show();
                    $("#fromTo1").show();
                    $('#exampleModalCenter2').modal('show');
                }

                //console.log(dataItem);
            });

            $("#example_table tbody").on('click', 'td.ndeshabilitarcue', function (e) {

                e.preventDefault();

                var data = example_table.row($(this).parents('tr')).data();

                var url = '@Url.Action("Delete", "CuentasTelepeajes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $('#example_table tbody').on('click', 'td.nhabilitarcue', function (e) {
                e.preventDefault();
                var data = example_table.row($(this).parents('tr')).data();

                $("#idcuentahab").val(data.Id);
                $("#numcuentahab").text(data.NumCuenta);

                $('#ModalHabilitarCuenta').modal('show');
            });

            /**** Recargar saldo cuenta ****/

            $('#example_table tbody').on('click', 'td.recargacue', function (e) {
                e.preventDefault();
                var data = example_table.row($(this).parents('tr')).data();

                $("#modelCuenta_NumCuenta").val(data.NumCuenta);

                $("#modalcuentastags").modal('hide');
                $("#ModalCuentaReca").modal('show');
            });

            $('#RecargarCuenta').on('click', function (e) {
                e.preventDefault();

                var form = $("#FormRecargarCuenta").validate();

                if (form.valid() && $("#modelCuenta_NumCuenta").val() != "" && $("#modelCuenta_SaldoARecargar").val() != "" && $("#modelCuenta_ConfSaldoARecargar").val() != "") {
                    $('#ModalCuentaReca').modal('hide');

                    $("#numcuentaVal").text($("#modelCuenta_NumCuenta").val());
                    $("#saldoarecargarCuentaVal").text($("#modelCuenta_SaldoARecargar").val());

                    $('#ModalCuentaConf').modal('show');
                }
            });

            $('#submitFormCuentaReca').on('click', function (e) {
                e.preventDefault();

                $("#FormRecargarCuenta").submit();

                //console.log($("#FormRecargarCuenta").serialize());
                //console.log($("#FormRecargarCuenta").serializeArray());
            });

            /**** Fin Recargar saldo cuenta ****/

            $("#submitHabilCuenta").on('click', function (e) {
                e.preventDefault();
                var url = '@Url.Action("Habilitar", "CuentasTelepeajes", new { id = "__id__" })';
                window.location.href = url.replace('__id__', $("#idcuentahab").val());
            });

            /*****************************************/

            $('#CrearTagAjax').on('click', function (e) {
                e.preventDefault();
                var form = $("#FormAddTags2").validate();

                if (form.valid() && $("#modelTags_NumTag").val() != "") {

                    if ($("#modelTags_tipocuenta").val() == "Colectiva" && $("#modelTags_SaldoTag").val() == "") {

                        saldoTag = 0;

                        var costotag = $("#modelTags_CobroTag").val();
                        var total = parseFloat(costotag) + parseFloat(saldoTag);

                        var tags = {};

                        tags.NumTag = $("#modelTags_NumTag").val();
                        tags.CobroTag = costotag;
                        tags.CuentaId = $("#modelTags_CuentaId").val();
                        tags.OldTag = $("#modelTags_OldTag").val();
                        tags.OldSaldo = $("#modelTags_OldSaldo").val();
                        tags.Observacion = $("#modelTags_Observacion").val();

                        let currChecked = $("#customControlInline2").prop("checked");

                        tags.Checked = currChecked;
                        //$("#Tagnumcuenta").text($("#modelTags_numcuenta").val());
                        //$("#TagSaldo").text(saldoTag);
                        //$("#total").text(total);

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("CreateTagsAjax", "Tags")',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: JSON.stringify(tags),
                            success: function (result) {
                                alert(result.Message);
                                $("#modelTags_CobroTag").val("77.00");
                                $("#modelTags_SaldoTag").val("");
                                $("#modelTags_NumTag").val("");
                                $("#modelTags_OldTag").val("");
                                $("#modelTags_OldSaldo").val("");
                                $("#modelTags_Observacion").val("");
                            },
                            failure: function (response) {
                                console.log(response.responseText);
                            },
                            error: function (response) {
                                console.log(response.responseText);
                            }
                        });
                    }
                }
            });

            /*****************************************/

            $('#CrearTag').on('click', function (e) {
                e.preventDefault();
                var form = $("#FormAddTags").validate();

                if (form.valid() && $("#NumTag").val() != "") {

                    if ($("#tipocuenta").val() == "Colectiva" && $("#SaldoTag").val() == "") {
                        $('#exampleModalCenter2').modal('hide');

                        $("#fromtotag").hide();
                        saldoTag = 0;

                        var costotag = $("#CobroTag").val();
                        var total = parseFloat(costotag) + parseFloat(saldoTag);

                        $("#Tagnumcuenta").text($("#numcuenta").val());
                        $("#Tagnum").text($("#NumTag").val());
                        $("#TagCosto").text(costotag);
                        $("#TagSaldo").text(saldoTag);
                        $("#total").text(total);

                        $('#exampleModalCenter3').modal('show');
                    }
                    else if ($("#tipocuenta").val() == "Individual" && $("#SaldoTag").val() != "") {
                        $('#exampleModalCenter2').modal('hide');

                        var saldoTag = 0;

                        $("#fromtotag").show();
                        saldoTag = $("#SaldoTag").val();

                        var costotag = $("#CobroTag").val();
                        var total = parseFloat(costotag) + parseFloat(saldoTag);

                        $("#Tagnumcuenta").text($("#numcuenta").val());
                        $("#Tagnum").text($("#NumTag").val());
                        $("#TagCosto").text(costotag);
                        $("#TagSaldo").text(saldoTag);
                        $("#total").text(total);

                        $('#exampleModalCenter3').modal('show');
                    }
                }
            });

            $("#submitFormAddTag").on("click", function (e) {
                e.preventDefault();
                $("#FormAddTags").submit();
            });

            $('#closemodalcuenta').on('click', function (e) {
                e.preventDefault();

                $("#ModalCuentaReca").modal('hide');
                $("#modalcuentastags").modal('show');
            });

            $(function () {
                $('#SaldoARecargar').mask("#,##0.00", { reverse: true });
                $('#ConfSaldoARecargar').mask("#,##0.00", { reverse: true });
                $('#SaldoTag').mask("#,##0.00", { reverse: true });
                $("#CobroTag").mask("#,##0.00", { reverse: true });
                $("#OldSaldo").mask("#,##0.00", { reverse: true });
            });

            /******************* TAGS ***************************/

            var table_tags = $('#table_tags').DataTable({
                language: {
                    "lengthMenu": "Desplegar _MENU_ por página",
                    "zeroRecords": "Sin resultados - disculpe",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "Sin registros disponibles",
                    "infoFiltered": "(registros filtrados _MAX_ )",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                },
                data: [],
                columns: [
                    { "data": "NumTag" },
                    {
                        "data": "SaldoTag",
                        render: function (data, type, row) {
                            var saldotag = $.number((parseFloat(data) / 100), 2, '.', ',' );
                            return saldotag;
                        },
                    },
                    {
                        "data": "StatusTag", render: function (data, type, row) {
                            var status = (data) ? "Válido" : "Inválido";
                            return status;
                        },
                    },
                    {
                        "data": "DateTTag",
                        render: function (data, type, row) {
                            var nowDateCuenta = new Date(parseInt(data.substr(6)));
                            return nowDateCuenta.format("dd/mm/yyyy HH:MM:ss");
                        },
                    },
                    {
                        "className": "recargartag",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-info">Recargar saldo</button>'
                    },
                    {
                        "className": "thabilitartag",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-success">Habilitar tag</button>'
                    },
                    {
                        "className": "tdeshabilitartag",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-warning">Deshabilitar tag</button>'
                    },
                    {
                        "className": "teliminartag",
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<button type="button" class="btn btn-tabla">Eliminar tag</button>'
                    }
                ],
                order: [[1, 'desc']]
            });

            $("#table_tags tbody").on('click', 'td.teliminartag', function (e) {

                e.preventDefault();

                var data = table_tags.row($(this).parents('tr')).data();

                var url = '@Url.Action("Delete", "Tags", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $("#table_tags tbody").on('click', 'td.tdeshabilitartag', function (e) {

                e.preventDefault();

                var data = table_tags.row($(this).parents('tr')).data();

                var url = '@Url.Action("Deshabilitar", "Tags", new { id = "__id__" })';
                window.location.href = url.replace('__id__', data.Id);
            });

            $('#table_tags tbody').on('click', 'td.thabilitartag', function (e) {
                e.preventDefault();

                var data = table_tags.row($(this).parents('tr')).data();

                $("#idtaghab").val(data.Id);
                $("#numtaghab").text(data.NumTag);

                $('#ModalHabilitarTag').modal('show');
            });

            $("#submitHabilTag").on('click', function (e) {
                e.preventDefault();
                var url = '@Url.Action("Activate", "Tags", new { id = "__id__" })';
                window.location.href = url.replace('__id__', $("#idtaghab").val());
            });

            $("#atrasmodaltag").on('click', function (e) {
                $("#modallisttags").modal('hide');
                $("#modalcuentastags").modal('show');
            });

            /**** Recargar saldo tags *****/

            $('#table_tags tbody').on('click', 'td.recargartag', function (e) {
                e.preventDefault();

                var data = table_tags.row($(this).parents('tr')).data();

                $("#modelTag_NumTag").val(data.NumTag);

                $("#modallisttags").modal('hide');
                $("#ModalTagReca").modal('show');
            });

            $('#RecargarTag').on('click', function (e) {
                e.preventDefault();

                var form = $("#FormRecargarTag").validate();

                if (form.valid() && $("#modelTag_NumTag").val() != "" && $("#modelTag_SaldoARecargar").val() != "" && $("#modelTag_ConfSaldoARecargar").val() != "") {
                    $('#ModalTagReca').modal('hide');

                    $("#numtagVal").text($("#modelTag_NumTag").val());
                    $("#saldoarecargarTagVal").text($("#modelTag_SaldoARecargar").val());

                    $('#ModalTagConf').modal('show');
                }
            });

            $('#submitFormTagReca').on('click', function (e) {
                e.preventDefault();

                $("#FormRecargarTag").submit();

                //console.log($("#FormRecargarTag").serialize());
                //console.log($("#FormRecargarTag").serializeArray());
            });

            $('#closemodaltag').on('click', function (e) {
                e.preventDefault();

                $("#ModalTagReca").modal('hide');
                $("#modallisttags").modal('show');
            });

            /**** Fin Recargar saldo tags ****/

            /******************** Otras cosas ************************/

            $(function () {
                $('#modelCuenta_SaldoARecargar').mask("#,##0.00", { reverse: true });
                $('#modelCuenta_ConfSaldoARecargar').mask("#,##0.00", { reverse: true });
                $('#modelCuenta_SaldoTag').mask("#,##0.00", { reverse: true });
                $("#modelCuenta_CobroTag").mask("#,##0.00", { reverse: true });
                $("#modelCuenta_OldSaldo").mask("#,##0.00", { reverse: true });

                $('#modelTag_SaldoARecargar').mask("#,##0.00", { reverse: true });
                $('#modelTag_ConfSaldoARecargar').mask("#,##0.00", { reverse: true });

                $("#modelTags_SaldoTag").mask("#,##0.00", { reverse: true });
                $("#modelTags_CobroTag").mask("#,##0.00", { reverse: true });
            });
        });
    </script>

    <script>
        let datos = new Vue({
            el: '#datos',
            data: {
                checked: false,
                max: 11,
                text: ''
            },
        });

        let datos2 = new Vue({
            el: '#datos2',
            data: {
                checked: false,
                max: 11,
                text: ''
            },
        });

        // you can invoke methods in JavaScript too
        //example2.greet() // => 'Hello Vue.js!'

      //var res = Vue.compile('<div><span>{{ msg }}</span></div>')

      //  new Vue({
      //      data: {
      //          msg: 'hello'
      //      },
      //      render: res.render,
      //      staticRenderFns: res.staticRenderFns
      //  });

    </script>

    @Scripts.Render("~/bundles/jqueryval")

}

@*
    //$.ajax({
    //    type: "POST",
    //    url: "/Clientes/CuentasTags",
    //    data: { IdCliente: datos.Id },
    //    success: function (data) {
    //        console.log(data);
    //    },
    //    error: function (ex) {
    //        alert(ex.responseText);
    //    }
    //});
                    //$.ajax({
                //    type: "POST",
                //    url: "/Clientes/CuentasTags",
                //    data: { IdCliente: datos.Id },
                //}).done(function (result) {
                //    //console.log(result);
                //    $("#clientename").text(datos.NombreCompleto);
                //    $("#modalcuentastags").modal('show');
                //}).fail(function (jqXHR, textStatus, errorThrown) {
                //    // needs to implement if it fails
                //    alert(jqXHR.responseText)
                //});

    <div id="app"></div>

*@

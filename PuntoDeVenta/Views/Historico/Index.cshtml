@model PuntoDeVenta.Models.TableHistorico
<<<<<<< HEAD
    @{
=======
@{
    ViewBag.Title = "TablaHistorico";
}
<div class="col-md-12 text-align-center">
   
    <h4 class="titulo1">Tabla Historico</h4>
    <p class="lead">
        Consulte el registro historico de cruces.
    </p>
</div>
<hr />
    <div class="container-fluid">
        @using (Html.BeginForm("Generar", "Historico", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-row align-items-center">
                <div class="col-auto">
                    @Html.LabelFor(model => model.Fecha_Inicio, htmlAttributes: new { @class = "sr-only", @for = "Date" })
                    @Html.EditorFor(model => model.Fecha_Inicio)
                    @Html.ValidationMessageFor(model => model.Fecha_Inicio, "", new { @class = "text-danger" })
                </div>
                <div class="col-auto">
                    @Html.LabelFor(model => model.Fecha_Fin, htmlAttributes: new { @class = "sr-only", @for = "Date" })
                    @Html.EditorFor(model => model.Fecha_Fin)
                    @Html.ValidationMessageFor(model => model.Fecha_Fin, "", new { @class = "text-danger" })
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary mb-2">Buscar</button>
                </div>
            </div>
        }

>>>>>>> origin/Diseño

        ViewBag.Title = "TablaHistorico";
    }


<<<<<<< HEAD

    <div class="container">
        <h2>Buscar Historial</h2>
        @using (Html.BeginForm("Generar", "Historico", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-row align-items-center">
                <div class="col-auto">
                    @Html.LabelFor(model => model.Fecha_Inicio, htmlAttributes: new { @class = "sr-only", @for = "Date" })
                    @Html.EditorFor(model => model.Fecha_Inicio)
                    @Html.ValidationMessageFor(model => model.Fecha_Inicio, "", new { @class = "text-danger" })
                </div>
                <div class="col-auto">
                    @Html.LabelFor(model => model.Fecha_Fin, htmlAttributes: new { @class = "sr-only", @for = "Date" })
                    @Html.EditorFor(model => model.Fecha_Fin)
                    @Html.ValidationMessageFor(model => model.Fecha_Fin, "", new { @class = "text-danger" })
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary mb-2">Buscar</button>
                </div>
            </div>
=======
        </div>
>>>>>>> origin/Diseño

         }

        @*<hr />

        @if (Model.ListaHistorico != null && Model.ListaHistorico.Any())
        {

                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Num Tag</th>
                                <th scope="col">Plaza</th>
                                <th scope="col">Fecha</th>
                                <th scope="col">Cuerpo</th>
                                <th scope="col">Carril</th>
                                <th scope="col">Clase</th>
                                <th scope="col">Saldo</th>
                                <th scope="col">Operadores</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int i = 0;
                                foreach (var item in Model.ListaHistorico)
                                {
                                    <tr>

                                        <th scope="row">@(++i)</th>
                                        <td class="td_1">@item.Id</td>
                                        <td>@item.Tag</td>
                                        <td>@item.Plaza</td>
                                        <td>@item.Fecha</td>
                                        <td>@item.Cuerpo</td>
                                        <td>@item.Carril</td>
                                        <td>@item.Clase</td>
                                        <td>@item.Saldo</td>
                                        <td>@item.Operador</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

        }
        else
        {
            <div id="aboutPage" class="col-lg-12">
                <p class="text-center lead">{{ message }}</p>
            </div>
        }*@

    </div>

        @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")

        <script>
            $(document).ready(function () {
                $(".td_1").hide();
                // Set form variable

                $(".clickme").on("click", function () {
                    var $row = $(this).closest("tr");       //, Finds the closest row <tr>
                    //$tds = $row.find("td");             // Finds all children <td> elements
                    //$("#form12").submit(function () {
                    //    alert('Form is submitting....');
                    //    // Or Do Something...
                    //    return true;
                    //});
                    alert($row.find(".td_1").html());
                    $('#form12').append('<input type="hidden" name="id" value="' + $row.find(".td_1").html() + '" />');
                    $("#form12").submit();
                });
            });
        </script>

        <script>
            var aboutPage = new Vue({
                el: '#aboutPage',
                data: {
                    message: 'NO HAY HISTORICO.'
                }
            });

            var example2 = new Vue({
                el: '#example-2',
                data: {
                    name: 'Vue.js'
                },
<<<<<<< HEAD
                // define métodos dentro del objeto `methods`
                methods: {
                    greet: function (event) {
                        // `this` dentro de los métodos apunta a la instancia de Vue
                        alert('Hello ' + this.name + '!')
                        // `event` es el evento nativo del DOM
                        if (event) {
                            alert(event.target.tagName)
                        }
                    }
                }
=======
                height: 550,
                groupable: true,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [{

                    field: "ContactName",
                    title: "Contact Name",
                    width: 240
                }, {
                    field: "ContactTitle",
                    title: "Contact Title"
                }, {
                    field: "CompanyName",
                    title: "Company Name"
                }, {
                    field: "Country",
                    width: 150
                }]
>>>>>>> origin/Diseño
            });
                            // puedes invocar métodos en JavaScript tamibién
                            //example2.greet() // -> 'Hello Vue.js!'
        </script>
    }
